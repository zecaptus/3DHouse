{"version":3,"sources":["components/Ground.js","components/Roof.js","hooks/Gui.js","components/Sky.js","utils/shape.js","components/Window.js","components/Door.js","components/Hole.js","context/Library.js","containers/Object.js","components/Wall.js","utils/wall.js","components/Floor.js","components/Room.js","containers/Rdc.js","index.js"],"names":["Ground","props","groundTexture","useLoader","TextureLoader","wrapS","wrapT","RepeatWrapping","repeat","set","anisotropy","encoding","sRGBEncoding","position","rotation-x","Math","PI","name","receiveShadow","attach","args","map","faces","Face3","Roof","x","y","topEdge","width","height","rest","texture","vertices","useMemo","Vector3","castShadow","visible","onUpdate","self","computeFaceNormals","color","side","metalness","init","debug","params","data","cb","window","__GUI_CONFIG__","__GUI_CACHE_DEBUG__","focusField","__controllers","find","controller","property","remove","__GUI_SELECTED__","add","focus","Object","keys","onChange","value","gui","addFolder","forEach","param","key","GUI","useGui","defaultValue","reduce","acc","useState","setGui","Sky","turbidity","rayleigh","mieCoefficient","mieDirectionalG","luminance","inclination","azimuth","sky","SkyObject","scale","setScalar","light","useRef","uniforms","material","useEffect","current","intensity","theta","phi","sunPos","cos","sin","copy","object","ref","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","shadow-camera-near","distance","shadow-camera-far","shadow-bias","shadow-mapSize-width","shadow-mapSize-height","shadow","camera","createSquare","startX","startY","Shape","moveTo","lineTo","Window","nbMirrors","restProps","ouverture","shape","volet","mirrorWidth","mirrorHeight","mirrors","Array","from","length","_","i","holes","push","mirror","transparent","transparency","roughness","defaultProps","Door","doorState","opened","opening","closing","animating","timer","reverse","gltf","GLTFLoader","scene","traverse","indexOf","isMesh","Color","mixer","AnimationMixer","actions","animations","anim","action","clipAction","loop","LoopOnce","useFrame","state","delta","finalDelta","update","pause","useCallback","a","paused","toggleDoor","play","enabled","console","log","rotation","onClick","Hole","TYPES","door","hole","Library","createContext","lib","Map","useObject","useLibrary","useContext","LibraryProvider","children","objects","index","type","Component","component","libraryKey","angle","Provider","x2","y2","z","has","get","warn","Object3D","createHole","child","childrenPosX","childrenPosY","bezierCurveTo","Wall","ply","inset","_x","_z","wallShape","s","concat","filter","Boolean","radAngle","translateX","translateZ","rotation-y","steps","curveSegments","depth","bevelEnabled","shadowSide","BackSide","Children","cloneElement","generator","_ply","b","sqrt","pow","atan2","translateY","additionnalWidth","isAngleInside","walls","Floor","ceil","autoClose","item","Room","floor","mask","Gallery","house","Rdc","floors","geometry","rooms","floorColor","extend","OrbitControls","searchRoot","ReactDOM","render","shadowMap","fov","aspect","innerWidth","innerHeight","pixelRatio","onCreated","gl","outputEncoding","antialias","color-hsv","groundColor-hsv","fallback","shapes","useThree","controls","domElement","enableDamping","rotateSpeed","dampingFactor","document","getElementById"],"mappings":"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","file":"static/js/main.d1a21dc1.chunk.js","sourcesContent":["import React from \"react\";\nimport { RepeatWrapping, sRGBEncoding } from \"three\";\nimport { useLoader } from \"react-three-fiber\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\n\nconst Ground = props => {\n  const groundTexture = useLoader(\n    TextureLoader,\n    \"./assets/textures/grasslight-big.jpg\"\n  );\n\n  groundTexture.wrapS = groundTexture.wrapT = RepeatWrapping;\n  groundTexture.repeat.set(40, 40);\n  groundTexture.anisotropy = 16;\n  groundTexture.encoding = sRGBEncoding;\n\n  return (\n    <mesh\n      position={[0, 0, 0]}\n      rotation-x={-Math.PI / 2}\n      name=\"Ground\"\n      receiveShadow\n    >\n      <planeBufferGeometry attach=\"geometry\" args={[200, 200]} />\n      <meshPhysicalMaterial attach=\"material\" map={groundTexture} />\n    </mesh>\n  );\n};\n\nexport default Ground;\n","import React, { useMemo } from \"react\";\nimport { Vector3, Face3 } from \"three\";\n\n/*\n         5\n       2   \\\n      /3\\---4\n     0----1/\n  */\n\nconst faces = [\n  // front\n  new Face3(0, 1, 2),\n  // right\n  new Face3(1, 5, 2),\n  new Face3(1, 4, 5),\n  // back\n  new Face3(3, 4, 5),\n  // left\n  new Face3(3, 5, 2),\n  new Face3(3, 2, 0),\n  // bottom\n  new Face3(3, 1, 0),\n  new Face3(3, 4, 1)\n];\n\nconst Roof = props => {\n  const { x, y, topEdge, width, height, texture, ...rest } = props;\n\n  const vertices = useMemo(\n    () => [\n      new Vector3(x, y, x), // 0\n      new Vector3(x, y, x + height), // 1\n      new Vector3(x + width / 3, y + topEdge, (x + height) / 2), // 2\n      new Vector3(x + width, y, x), // 3\n      new Vector3(x + width, y, x + height), // 4\n      new Vector3(x + width - width / 3, y + topEdge, (x + height) / 2) // 5\n    ],\n    [x, y, topEdge, width, height]\n  );\n\n  return (\n    <mesh {...rest} receiveShadow castShadow name=\"Roof\" visible={false}>\n      <geometry\n        attach=\"geometry\"\n        vertices={vertices}\n        faces={faces}\n        onUpdate={self => {\n          self.computeFaceNormals();\n        }}\n      />\n      <meshPhysicalMaterial\n        attach=\"material\"\n        color={0x333346}\n        side={2}\n        metalness={1}\n      />\n    </mesh>\n  );\n};\n\nexport default Roof;\n","import { useState } from \"react\";\nimport { GUI } from \"dat.gui\";\n\nif (!window.gui) {\n  window.gui = new GUI();\n  window.__GUI_CONFIG__ = {};\n  window.__GUI_SELECTED__ = {};\n  window.__GUI_CACHE_DEBUG__ = {};\n}\n\nfunction init(name, debug, params, data, cb) {\n  if (!window.__GUI_CONFIG__[name]) {\n    window.__GUI_CACHE_DEBUG__[name] = { [debug]: cb };\n    window.__GUI_CONFIG__[name] = window.gui.addFolder(name);\n    Object.keys(params).forEach(param => {\n      const controller = window.__GUI_CONFIG__[name].add(\n        data,\n        param,\n        ...(params[param].args || [])\n      );\n\n      controller.onChange(function(value) {\n        if (window.__GUI_SELECTED__ === \"all\") {\n          Object.keys(window.__GUI_CACHE_DEBUG__[name]).forEach(key =>\n            window.__GUI_CACHE_DEBUG__[name][key]({ ...data, [param]: value })\n          );\n        } else {\n          window.__GUI_CACHE_DEBUG__[name][window.__GUI_SELECTED__]({\n            ...data,\n            [param]: value\n          });\n        }\n        //cb({ ...data, [param]: value });\n      });\n    });\n  } else {\n    if (window.__GUI_CACHE_DEBUG__[name][debug]) return;\n    window.__GUI_CACHE_DEBUG__[name][debug] = cb;\n    const focusField = window.__GUI_CONFIG__[name].__controllers.find(\n      controller => controller.property === \"focus\"\n    );\n\n    if (focusField) {\n      focusField.remove();\n    } else {\n      window.__GUI_SELECTED__ = \"all\";\n    }\n\n    const controller = window.__GUI_CONFIG__[name].add(\n      { ...data, focus: \"all\" },\n      \"focus\",\n      [\"all\", ...Object.keys(window.__GUI_CACHE_DEBUG__[name])]\n    );\n\n    controller.onChange(function(value) {\n      window.__GUI_SELECTED__ = value;\n    });\n  }\n\n  return window.__GUI_CONFIG__[name];\n}\n\nfunction useGui(name, params, debug = \"none\") {\n  const defaultValue = Object.keys(params).reduce(\n    (acc, param) => ({\n      ...acc,\n      [param]: params[param].value\n    }),\n    {}\n  );\n  const [gui, setGui] = useState(defaultValue);\n\n  init(name, debug, params, { ...gui }, setGui);\n\n  return gui;\n}\n\nexport default useGui;\n","import React, { useRef, useEffect } from \"react\";\nimport { Sky as SkyObject } from \"three/examples/jsm/objects/Sky\";\nimport useGui from \"../hooks/Gui\";\nimport { Vector3 } from \"three\";\n\nconst Sky = props => {\n  const {\n    turbidity,\n    rayleigh,\n    mieCoefficient,\n    mieDirectionalG,\n    luminance,\n    inclination,\n    azimuth\n  } = useGui(\"Sky\", {\n    turbidity: { value: 3, args: [1, 20, 0.1] },\n    rayleigh: { value: 2, args: [0.0, 4, 0.001] },\n    mieCoefficient: { value: 0.005, args: [0.0, 0.1, 0.001] },\n    mieDirectionalG: { value: 0.985, args: [0.0, 1, 0.001] },\n    luminance: { value: 1, args: [0.0, 2] },\n    inclination: { value: 0.6883, args: [0, 1, 0.0001] },\n    azimuth: { value: 0.6993, args: [0, 1, 0.0001] }\n  });\n\n  const distance = 400000;\n  const sky = new SkyObject();\n  sky.scale.setScalar(450000);\n  const light = useRef();\n\n  var uniforms = sky.material.uniforms;\n  uniforms[\"turbidity\"].value = turbidity;\n  uniforms[\"rayleigh\"].value = rayleigh;\n  uniforms[\"mieCoefficient\"].value = mieCoefficient;\n  uniforms[\"mieDirectionalG\"].value = mieDirectionalG;\n  uniforms[\"luminance\"].value = luminance;\n\n  useEffect(() => {\n    light.current.intensity = luminance;\n  }, [light, luminance]);\n\n  var theta = Math.PI * (inclination - 0.5);\n  var phi = 2 * Math.PI * (azimuth - 0.5);\n\n  const sunPos = [\n    distance * Math.cos(phi),\n    distance * Math.sin(phi) * Math.sin(theta),\n    distance * Math.sin(phi) * Math.cos(theta)\n  ];\n\n  uniforms[\"sunPosition\"].value.copy(new Vector3(...sunPos));\n\n  return (\n    <>\n      <primitive object={sky} />\n\n      <directionalLight\n        ref={light}\n        position={sunPos}\n        shadow-camera-left={-50}\n        shadow-camera-right={50}\n        shadow-camera-top={50}\n        shadow-camera-bottom={-50}\n        shadow-camera-near={distance - 200}\n        shadow-camera-far={distance + 1000}\n        shadow-bias={-1e-10}\n        shadow-mapSize-width={8192}\n        shadow-mapSize-height={8192}\n        castShadow\n      />\n      {light.current && (\n        <>\n          <directionalLightHelper args={[light.current]} />\n          <cameraHelper args={[light.current.shadow.camera]} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Sky;\n","import { Shape } from \"three\";\n\nconst createSquare = (startX, startY, width, height) =>\n  new Shape()\n    .moveTo(startX, startY)\n    .lineTo(startX + width, startY)\n    .lineTo(startX + width, startY + height)\n    .lineTo(startX, startY + height)\n    .lineTo(startX, startY);\n\nconst createRoundedSquare = (startX, startY, width, height) =>\n  new Shape()\n    .moveTo(startX, startY)\n    .lineTo(startX + width, startY)\n    .lineTo(startX + width, startY + height)\n    .bezierCurveTo(\n      startX + width,\n      startY + height,\n      startX + width / 2,\n      startY + height + 0.2,\n      startX,\n      startY + height\n    )\n    .lineTo(startX, startY);\n\nexport { createSquare, createRoundedSquare };\n","import React from \"react\";\nimport { createSquare } from \"../utils/shape\";\nimport useGui from \"../hooks/Gui\";\n\nconst Window = props => {\n  const { debug, x, y, width, height, nbMirrors, ...restProps } = props;\n\n  const { ouverture } = useGui(\n    \"Window\",\n    {\n      ouverture: { value: 0, args: [0, 1, 0.01] }\n    },\n    debug\n  );\n  const shape = createSquare(x, y, width, height + 0.2);\n  const volet = createSquare(\n    x,\n    y + height - height * ouverture,\n    width,\n    height * ouverture + 0.2\n  );\n\n  const mirrorWidth = (width - (2 * 0.08 + (nbMirrors - 1) * 0.06)) / nbMirrors;\n  const mirrorHeight = height - 0.16;\n\n  const mirrors = Array.from({ length: nbMirrors }, (_, i) =>\n    createSquare(\n      x + 0.08 + (mirrorWidth + 0.06) * i,\n      y + 0.08,\n      mirrorWidth,\n      mirrorHeight\n    )\n  );\n\n  shape.holes.push(...mirrors);\n\n  return (\n    <group {...restProps} name=\"Window\">\n      <mesh receiveShadow castShadow position={[0, 0, 0.1]}>\n        <shapeBufferGeometry attach=\"geometry\" args={[shape]} />\n        <meshPhysicalMaterial\n          attach=\"material\"\n          color={0x333346}\n          side={0}\n          metalness={1}\n        />\n      </mesh>\n      <mesh receiveShadow castShadow position={[0, 0, 0.1]}>\n        <shapeBufferGeometry attach=\"geometry\" args={[shape]} />\n        <meshPhysicalMaterial attach=\"material\" color={0xffffff} side={1} />\n      </mesh>\n\n      <mesh receiveShadow castShadow position={[0, 0, 0.12]} name=\"volet\">\n        <shapeBufferGeometry attach=\"geometry\" args={[volet]} />\n        <meshPhysicalMaterial\n          attach=\"material\"\n          color={0x333346}\n          side={2}\n          metalness={1}\n        />\n      </mesh>\n      {mirrors.map((mirror, i) => (\n        <mesh key={`mirror_${i}`} position={[0, 0, 0.1]} receiveShadow>\n          <shapeGeometry attach=\"geometry\" args={[mirror]} />\n          <meshPhysicalMaterial\n            attach=\"material\"\n            color={0xffffff}\n            transparent\n            transparency={0.8}\n            metalness={0}\n            roughness={0}\n            side={2}\n          />\n        </mesh>\n      ))}\n    </group>\n  );\n};\n\nWindow.defaultProps = {\n  x: 0,\n  y: 0.9,\n  width: 1.2,\n  height: 1.25,\n  nbMirrors: 2\n};\n\nexport default Window;\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport { useLoader, useFrame } from \"react-three-fiber\";\nimport { AnimationMixer, LoopOnce, Color } from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst Door = props => {\n  const doorState = useRef({\n    opened: false,\n    opening: false,\n    closing: false,\n    animating: false,\n    timer: 0\n  });\n  const { x, y, width, height, reverse, ...restProps } = props;\n\n  const gltf = useLoader(\n    GLTFLoader,\n    \"./assets/Room-Door/Door_Component_BI3.glb\"\n  );\n\n  useEffect(() => {\n    gltf.scene.traverse(function(object) {\n      // hide some mesh\n      if (~[\"Plane\", \"Plane004\"].indexOf(object.name)) object.visible = false;\n\n      // apply shadow\n      if (object.isMesh) {\n        object.receiveShadow = true;\n        object.castShadow = true;\n\n        if (object.material.name === \"Glossy\") object.material.metalness = 0.34;\n        if (object.material.name === \"Door\") {\n          object.material.metalness = 1;\n          object.material.color = new Color(0x333346);\n        }\n      }\n    });\n  }, [gltf]);\n\n  const mixer = useRef(new AnimationMixer(gltf.scene));\n  const actions = useRef(\n    gltf.animations.map(anim => {\n      const action = mixer.current.clipAction(anim);\n      action.loop = LoopOnce;\n      return action;\n    })\n  );\n\n  useFrame((state, delta) => {\n    const finalDelta = delta * (doorState.current.closing ? -1 : 1);\n    mixer.current.update(finalDelta);\n\n    if (doorState.current.animating) {\n      doorState.current.timer += finalDelta;\n      // door is now opened\n      if (doorState.current.timer > 2.5) {\n        pause();\n        doorState.current.timer = 2.5;\n      }\n\n      // door is now closed\n      if (doorState.current.timer < 0) {\n        pause();\n        doorState.current.timer = 0;\n      }\n    }\n  });\n\n  const pause = useCallback(() => {\n    doorState.current.opened = doorState.current.opening;\n    doorState.current.opening = false;\n    doorState.current.animating = false;\n    doorState.current.closing = false;\n    actions.current.forEach(a => {\n      a.paused = true;\n    });\n  }, [actions]);\n\n  const toggleDoor = useCallback(() => {\n    if (doorState.current.animating) {\n      doorState.current.closing = !doorState.current.closing;\n      doorState.current.opening = !doorState.current.opening;\n    } else {\n      doorState.current.closing = doorState.current.opened;\n      doorState.current.opening = !doorState.current.opened;\n    }\n    doorState.current.animating = true;\n    actions.current.forEach(a => {\n      a.play();\n      a.paused = false;\n      a.enabled = true;\n    });\n\n    //opened = false;\n  }, [actions]);\n\n  console.log('position', x + width / 2, y, 0.09);\n  console.log('rotatopn',[0, Math.PI, 0]);\n  console.log(restProps)\n\n  return (\n    <group name=\"Door\" {...restProps}>\n      <primitive\n        object={gltf.scene}\n        position={[x + width / 2, y, 0.09]}\n        rotation={[0, Math.PI, 0]}\n        scale={[reverse ? -1 : 1, 1, 1]}\n        onClick={toggleDoor}\n      />\n      <mesh receiveShadow castShadow position={[x + width / 2, y + 2.15, 0.18]}>\n        <planeBufferGeometry attach=\"geometry\" args={[width, 0.2]} />\n        <meshPhysicalMaterial\n          attach=\"material\"\n          color={0x333346}\n          side={0}\n          metalness={1}\n        />\n      </mesh>\n    </group>\n  );\n};\n\nDoor.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0.9,\n  height: 2.15\n};\n\nexport default Door;\n","const Hole = props => {\n  return null;\n};\n\nHole.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0.9,\n  height: 2.15\n};\n\nexport default Hole;\n","import React, { createContext, useState, useContext, useMemo } from \"react\";\nimport Window from \"../components/Window\";\nimport Door from \"../components/Door\";\nimport Hole from \"../components/Hole\";\n\nconst TYPES = {\n  window: Window,\n  door: Door,\n  hole: Hole\n};\n\n// const objects = house.objects.map(({ type, ...props }, index) => {\n//   const Component = TYPES[type];\n//   return <Component key={index} {...props} />;\n// });\n\nconst Library = createContext({ lib: new Map(), useObject: () => {} });\n\nconst LibraryProvider = ({ data, children }) => {\n  const objects = useMemo(\n    () =>\n      new Map(\n        data.map(({ type, ...props }, index) => {\n          const Component = TYPES[type];\n          return [\n            index,\n            {\n              component: <Component key={index} libraryKey={index} {...props} />,\n              position: [],\n              angle: null\n            }\n          ];\n        })\n      ),\n    [data]\n  );\n  const [lib, setLib] = useState(objects);\n  console.log(lib);\n  const useObject = ({ props: {libraryKey, x, y, position:[x2, y2, z], 'rotation-y': angle }}) => {\n\n    if(lib.has(libraryKey)) {\n      //setLib(new Map([...lib, [libraryKey, { ...lib.get(libraryKey), angle, position}]]))\n      lib.set(libraryKey, { ...lib.get(libraryKey), angle, position: [x + x2, y+y2, z]})\n    }\n    else console.warn(`Unable to find Object{${libraryKey}} from library`)\n    //setLib(objectIndex);\n  };\n\n  return (\n    <Library.Provider value={{ lib, useObject }}>{children}</Library.Provider>\n  );\n};\n\nexport const useLibrary = () => useContext(Library);\n\nexport default LibraryProvider;\n","//import React from 'react';\nimport { useLibrary } from \"../context/Library\";\n\nconst Object3D = props => {\n  const { useObject } = useLibrary();\n  useObject(props.children);\n\n  return props.children;\n};\n\nexport default Object3D;\n","import React, { useMemo, Children, cloneElement } from \"react\";\nimport { createSquare, createRoundedSquare } from \"../utils/shape\";\nimport { BackSide } from \"three\";\nimport Object3D from \"../containers/Object\";\n\nconst createHole = (child, childrenPosX, childrenPosY) =>\n  child && child.type && ~[\"Window\", \"Door\", \"Hole\"].indexOf(child.type.name)\n    ? createRoundedSquare(\n        child.props.x + childrenPosX,\n        child.props.y + childrenPosY,\n        child.props.width,\n        child.props.height\n      )\n    : null;\n\nconst Wall = ({\n  x,\n  y,\n  z,\n  width,\n  height,\n  ply,\n  angle,\n  shape,\n  children,\n  childrenPosX = 0,\n  childrenPosY = 0,\n  inset,\n  ...props\n}) => {\n  let _x = x;\n  let _z = z;\n\n  console.log(children)\n\n  const wallShape = useMemo(() => {\n    const s = shape || createSquare(0, 0, width, height);\n    if (children)\n      s.holes = []\n        .concat(children)\n        .map(child => createHole(child, childrenPosX, childrenPosY))\n        .filter(Boolean);\n\n    return s;\n  }, [width, height, shape, children, childrenPosX, childrenPosY]);\n\n  const radAngle = angle * (Math.PI / 180);\n\n  // extrudedBuffer will extruded outside.\n  // negate this here\n  const translateX = ply * Math.sin(radAngle);\n  const translateZ = ply * Math.cos(radAngle);\n\n  if (inset) {\n    _x -= translateX;\n    _z -= translateZ;\n  }\n\n  return (\n    <>\n      <mesh\n        castShadow\n        receiveShadow\n        position={[_x, y, _z]}\n        rotation-y={radAngle}\n        name=\"Wall\"\n        {...props}\n      >\n        <extrudeBufferGeometry\n          attach=\"geometry\"\n          args={[\n            wallShape,\n            {\n              steps: 1,\n              curveSegments: 10,\n              depth: ply,\n              bevelEnabled: false\n            }\n          ]}\n        />\n        <meshPhysicalMaterial\n          attach=\"material\"\n          color={0xfefee2}\n          shadowSide={BackSide}\n          roughness={1}\n          metalness={0}\n        />\n      </mesh>\n      {Children.map(children, child => child && (\n        <Object3D>\n          {cloneElement(child, {\n            position: [\n              x - translateX + childrenPosX,\n              y,\n              z - translateZ + childrenPosY\n            ],\n            \"rotation-y\": radAngle,\n            ...props\n          })}\n        </Object3D>\n      ))}\n    </>\n  );\n};\n\nWall.defaultProps = {\n  x: 0,\n  y: 0,\n  z: 0,\n  angle: 0,\n  width: 0,\n  height: 2.5,\n  ply: 0.1,\n  inset: false\n};\n\nexport default Wall;\n","export const generator = (data, ply, cb, inset = false) =>\n  data.reduce(\n    (acc, a, index) => {\n      const _ply = a.ply || ply;\n      const b = data[(index + 1) % data.length];\n      const width = Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n      const angle =\n        (360 + Math.atan2(b.y - a.y, b.x - a.x) * (180 / Math.PI)) % 360;\n      let translateX = 0;\n      let translateY = 0;\n      let additionnalWidth = 0;\n\n\n      // angle rentrant, on pousse les murs pour masquer les trous\n      const isAngleInside = (360 + angle - acc.angle) % 360 > 180;\n      if (isAngleInside || !inset) {\n        additionnalWidth += _ply;\n        translateX = _ply * Math.cos(angle * (Math.PI / 180));\n        translateY = _ply * Math.sin(angle * (Math.PI / 180));\n        if (!inset && isAngleInside) {\n          translateX *= -1;\n          translateY *= -1;\n          additionnalWidth -= _ply;\n        }\n      }\n\n      return {\n        walls: [\n          ...acc.walls,\n          cb(\n            a,\n            a.x - translateX,\n            (a.y - translateY) * -1,\n            angle,\n            width + additionnalWidth,\n            index,\n            translateX,\n            translateY\n          )\n        ],\n        angle\n      };\n    },\n    { walls: [], angle: null }\n  ).walls;\n","import React from \"react\";\nimport { Shape } from \"three\";\n\nimport Wall from \"./Wall\";\nimport { generator } from \"../utils/wall\";\nimport { useLibrary } from \"../context/Library\";\n\nconst Floor = ({ data, objects, y, height, ply, children, props }) => {\n  let ceil = new Shape();\n  ceil.autoClose = true;\n  ceil.moveTo(0, 0);\n\n  const { lib } = useLibrary();\n\nconsole.log(lib)\n  const walls = generator(\n    data,\n    ply,\n    (item, x, z, angle, width, index, translateX, translateY) => {\n      ceil.lineTo(item.x, item.y);\n\n      return (\n        <Wall\n          key={`Wall_${index}`}\n          x={x}\n          y={y}\n          z={z}\n          height={height}\n          width={width}\n          angle={angle}\n          childrenPosX={translateX}\n          childrenPosY={translateY}\n          ply={ply}\n          inset\n        >\n          {item.objects && item.objects.map(key => lib.get(key).component)}\n        </Wall>\n      );\n    },\n    true\n  );\n\n  return (\n    <group name=\"Floor\" {...props}>\n      {walls}\n      {children}\n      <mesh\n        rotation-x={-Math.PI / 2}\n        receiveShadow\n        castShadow\n        name=\"ceil\"\n        position={[0, y + height, 0]}\n      >\n        <shapeBufferGeometry attach=\"geometry\" args={[ceil, { steps: 100 }]} />\n        <meshPhysicalMaterial attach=\"material\" color={0xffffff} side={1} />\n      </mesh>\n    </group>\n  );\n};\n\nFloor.defaultProps = {\n  y: 0,\n  ply: 0.3,\n  height: 2.5\n};\n\nexport default Floor;\n","import React from \"react\";\nimport { Shape, Color } from \"three\";\nimport Wall from \"./Wall\";\nimport Hole from \"./Hole\";\nimport { generator } from \"../utils/wall\";\nimport { useLibrary } from \"../context/Library\";\n/**\n points\n */\nconst Room = ({ y = 0, data, ...props }) => {\n  const { lib } = useLibrary();\n  const floor = new Shape();\n  floor.autoClose = true;\n  floor.moveTo(data[0].x, data[0].y);\n\nconsole.log(lib)\n  const walls = generator(data, 0.035, (item, x, z, angle, width, index) => {\n    floor.lineTo(item.x, item.y);\n\n    //console.log(item.mask, item.x , item.y)\n    //console.log(objects[2])\n    return (\n      <Wall\n        key={`Wall_${index}`}\n        x={x}\n        y={0}\n        z={z}\n        height={2.5}\n        width={width}\n        angle={angle}\n        ply={item.ply || 0.035}\n      >\n        {item.objects && item.objects.map(key => lib.get(key).component)}\n        {item.mask && item.mask.map(key => {\n          const { position, angle } = lib.get(key);\n          console.log(lib.get(key))\n          console.log(<Hole position />);\n          return <Hole position={ position } />\n        })}\n      </Wall>\n    );\n  });\n\n  return (\n    <group name=\"Room\" {...props}>\n      {walls}\n      <mesh\n        rotation-x={-Math.PI / 2}\n        receiveShadow\n        castShadow\n        name=\"floor\"\n        position={[0, y + 0.06, 0]}\n      >\n        <shapeBufferGeometry attach=\"geometry\" args={[floor, { steps: 100 }]} />\n        <meshPhysicalMaterial\n          attach=\"material\"\n          color={props.color ? new Color(props.color) : 0xff0000}\n          side={0}\n        />\n      </mesh>\n    </group>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport Window from \"../components/Window\";\nimport Door from \"../components/Door\";\nimport Wall from \"../components/Wall\";\nimport Hole from \"../components/Hole\";\nimport Floor from \"../components/Floor\";\nimport Room from \"../components/Room\";\nimport { createSquare } from \"../utils/shape\";\nimport house from \"../datas/house.json\";\nimport Library from \"../context/Library\";\n\nconst TYPES = {\n  window: Window,\n  door: Door\n};\n\nconst objects = house.objects.map(({ type, ...props }, index) => {\n  const Component = TYPES[type];\n  return <Component key={index} {...props} />;\n});\n\nconst Gallery = () => (\n  <group name=\"gallery\">\n    <Wall width={1.13} x={13.4} angle={90} ply={0.24} inset>\n      <Hole x={0.24} width={0.89} height={2.2} />\n    </Wall>\n    <Wall x={7.11} width={6.29} ply={0.24} inset>\n      <Hole x={0} width={2.2} height={2.2} />\n      <Hole x={2.44} width={3.61} height={2.2} />\n    </Wall>\n\n    <mesh name=\"debug\" position={[7.11 + 0.455, 1, -1]}>\n      <planeBufferGeometry attach=\"geometry\" args={[0.91, 0.2]} />\n      <meshPhysicalMaterial\n        attach=\"material\"\n        color={0xff0000}\n        side={0}\n        metalness={1}\n      />\n    </mesh>\n\n    <mesh\n      rotation-x={-Math.PI / 2}\n      receiveShadow\n      castShadow\n      name=\"ceil\"\n      position={[0, 2.5, 0]}\n    >\n      <shapeBufferGeometry\n        attach=\"geometry\"\n        args={[createSquare(7.11, 0, 6.29, 1.13), { steps: 100 }]}\n      />\n      <meshPhysicalMaterial attach=\"material\" color={0xffffff} side={1} />\n    </mesh>\n  </group>\n);\n\nconst Rdc = props => {\n  return (\n    <Library data={house.objects}>\n      {house.floors.map(floor => (\n        <Floor\n          key={floor.name}\n          data={floor.geometry}\n          ply={floor.ply}\n          name={floor.name}\n        >\n          <Gallery />\n          {floor.rooms.map(key => (\n            <Room\n              key={key}\n              name={house.rooms[key].name}\n              data={house.rooms[key].geometry}\n              color={house.rooms[key].floorColor}\n            />\n          ))}\n        </Floor>\n      ))}\n    </Library>\n  );\n};\n\nexport default Rdc;\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport ReactDOM from 'react-dom';\nimport React, { useRef, useState, useEffect, useMemo, Suspense } from 'react';\nimport {\n  Canvas,\n  useFrame,\n  extend,\n  useThree,\n  useUpdate,\n  useLoader,\n} from 'react-three-fiber';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\nimport {\n  sRGBEncoding,\n  Shape,\n  RepeatWrapping,\n  ACESFilmicToneMapping,\n  VSMShadowMap,\n} from 'three';\n\nimport './index.css';\n\nimport Ground from './components/Ground';\nimport Roof from './components/Roof';\nimport Sky from './components/Sky';\nimport Rdc from './containers/Rdc';\n\nextend({ OrbitControls });\n\nconst Controls = props => {\n  const { camera, gl } = useThree();\n  const controls = useRef();\n  useFrame(() => controls.current.update());\n  return (\n    <orbitControls ref={controls} args={[camera, gl.domElement]} {...props} />\n  );\n};\n\nconst Rooms = props => {\n  const texture = useLoader(TextureLoader, './assets/textures/22_clay.jpg');\n\n  useEffect(() => {\n    texture.wrapS = texture.wrapT = RepeatWrapping;\n    texture.repeat.set(10, 10);\n    texture.anisotropy = 16;\n  }, [texture]);\n\n  const shapes = useMemo(() => {\n    return new Shape()\n      .moveTo(0, 0)\n      .lineTo(13.4, 0)\n      .lineTo(13.4, 10)\n      .lineTo(0, 10)\n      .lineTo(0, 0);\n  }, []);\n\n  return (\n    <group position={[-6.52, 0.01, 5]} name=\"House\">\n      <Rdc />\n\n      <mesh rotation-x={-Math.PI / 2} receiveShadow>\n        <extrudeBufferGeometry\n          attach=\"geometry\"\n          args={[shapes, { steps: 100, depth: 0.05, bevelEnabled: false }]}\n        />\n        <meshPhysicalMaterial attach=\"material\" />\n      </mesh>\n\n      <Roof\n        x={0}\n        y={2.5}\n        width={13.8}\n        height={10.4}\n        topEdge={2.5}\n        position={[-0.2, 0, -10.2]}\n        texture={texture}\n      />\n      <pointLight args={[0xffffff, 0.7, 5]} position={[11, 2.4, -3]} castShadow>\n        <mesh name=\"light salon\">\n          <sphereBufferGeometry attach=\"geometry\" args={[0.05, 16, 8]} />\n          <meshPhysicalMaterial attach=\"material\" color={0xffffff} />\n        </mesh>\n      </pointLight>\n\n      <pointLight args={[0xffffff, 0.7, 5]} position={[11, 2.4, -8]} castShadow>\n        <mesh name=\"light salle a manger\">\n          <sphereBufferGeometry attach=\"geometry\" args={[0.05, 16, 8]} />\n          <meshPhysicalMaterial attach=\"material\" color={0xffffff} />\n        </mesh>\n      </pointLight>\n\n      <pointLight args={[0xffffff, 0.7, 5]} position={[9, 2.4, -3]} castShadow>\n        <mesh name=\"light couloir\">\n          <sphereBufferGeometry attach=\"geometry\" args={[0.05, 16, 8]} />\n          <meshPhysicalMaterial attach=\"material\" color={0xffffff} />\n        </mesh>\n      </pointLight>\n    </group>\n  );\n};\n\nwindow.searchRoot = ReactDOM.render(\n  <Canvas\n    shadowMap\n    //camera={[60, window.innerWidth / window.innerHeight, 100, 2000000]}\n    camera={{\n      position: [10, 10, 40],\n      fov: 25,\n      aspect: window.innerWidth / window.innerHeight,\n    }}\n    pixelRatio={window.pixelRatio}\n    onCreated={({ scene, gl }) => {\n      //scene.fog = new Fog(0xcce0ff, 50, 100);\n      scene.name = 'Main';\n      gl.outputEncoding = sRGBEncoding;\n      gl.antialias = true;\n      //gl.shadowType = VSMShadowMap;\n      //gl.toneMapping = ACESFilmicToneMapping;\n    }}\n  >\n    {/* <ambientLight color={0xffffff} intensity={0.6} /> \n    \n    hemiLight.color.setHSV( 0.6, 0.75, 0.5 );\n            hemiLight.groundColor.setHSV( 0.095, 0.5, 0.5 );\n            hemiLight.position.set( 0, 500, 0 );\n    */}\n\n    <hemisphereLight\n      args={[0xffffff, 0xffffff, 0.6]}\n      color-hsv={[0.6, 0.75, 0.5]}\n      groundColor-hsv={[0.095, 0.5, 0.5]}\n      position={[0, 500, 0]}\n    />\n    <Sky />\n\n    <Suspense fallback={'Chargement ...'}>\n      <Rooms />\n      <Controls enableDamping rotateSpeed={0.3} dampingFactor={0.1} />\n      <Ground />\n    </Suspense>\n  </Canvas>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}